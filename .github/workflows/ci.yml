name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - 'fuzz/**'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'fuzz/**'

# Common environment variables
env:
  RUSTFLAGS: "-C debuginfo=1"
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    name: fmt-clippy
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        rust: [nightly-2022-08-03]
    steps:
      - uses: actions/checkout@v3
      - run: |
          rustup set auto-self-update disable
          rustup toolchain install ${{ matrix.rust }} --profile minimal
      - name: Cache Rust Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            ./target
          key: rust-debug-${{ runner.os }}-${{ hashFiles('rust-toolchain') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            rust-debug-${{ runner.os }}-${{ hashFiles('rust-toolchain') }}-
            rust-debug-${{ runner.os }}-
            rust-
      - name: Install clippy rustfmt
        run: |
          rustup component add clippy
          rustup component add rustfmt
          rustup component add miri
          rustup component add rust-src
      - name: Lint
        run: |
          cargo clippy
          cargo fmt

  unit-test:
    name: unit-test
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        rust: [nightly-2022-08-03]
    steps:
      - uses: actions/checkout@v3
      - run: |
          rustup set auto-self-update disable
          rustup toolchain install ${{ matrix.rust }} --profile minimal
      - name: Cache Rust Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            ./target
          key: rust-debug-${{ runner.os }}-${{ hashFiles('rust-toolchain') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            rust-debug-${{ runner.os }}-${{ hashFiles('rust-toolchain') }}-
            rust-debug-${{ runner.os }}-
            rust-
      - name: Run Tests
        run: |
          cargo test
        env:
          RUST_BACKTRACE: "1"

  miri-test:
    name: miri-test
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        rust: [nightly-2022-08-03]
    steps:
      - uses: actions/checkout@v3
      - run: |
          rustup set auto-self-update disable
          rustup toolchain install ${{ matrix.rust }} --profile minimal
      - name: Cache Rust Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            ./target
          key: rust-debug-${{ runner.os }}-${{ hashFiles('rust-toolchain') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            rust-debug-${{ runner.os }}-${{ hashFiles('rust-toolchain') }}-
            rust-debug-${{ runner.os }}-
            rust-
      - name: Install miri rust-src
        run: |
          rustup component add miri
          rustup component add rust-src
      - name: Miri Tests
        run: |
          cargo miri test
        env:
          RUST_BACKTRACE: "1"
          MIRIFLAGS: -Zmiri-backtrace=full
